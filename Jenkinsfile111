pipeline {
    agent any
    tools{
        maven 'maven3'
        jdk 'java17'
        terraform 'terraform-eks'
    }
    environment {
        SCANNER_HOME=tool 'sonar-sccaner'
      }
    stages {
        stage('clean Workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout'){
            steps{
                git branch: 'main', url: 'https://github.com/vinamittal/regi-app.git'
            }
        }
        stage("Build Application"){
            steps {
                sh "mvn clean package"
            }

       }

       stage("Test Application"){
           steps {
                 sh "mvn test"
           }
        }
        stage('Sonnar Scan'){
            steps{
            withSonarQubeEnv('sonar-server') {
                    sh "mvn sonar:sonar"
            }
            }
        }
        stage('Quality Gate'){
            steps{
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonnar-token'
                }
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage('Docker push'){
            steps{
                script{
                    withDockerRegistry(credentialsId: 'dockerhub', toolName: 'docker') {
                        sh '''
                        docker build -t register-app-pipeline .
                        docker tag register-app-pipeline vinaymittal811/register-app-pipeline:latest
                        docker push vinaymittal811/register-app-pipeline:latest
                        '''
                    }
                }
            }
        }
        
    }
}
